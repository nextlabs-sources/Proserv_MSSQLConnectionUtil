<!-- build_compile.xmlDescription:	This ANT script publishes installers and build artifacts to s:/build.	To use this script, you must update properties is <project root>/scripts/build.properties or overide 	them from commandline (using -D option). For example:		set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH%		ant -XX:MaxPermSize=512m -Dnlbuildroot=C:/depot/PolicyStudio/dev/BuildScript_1205 -Dexternal.dir=c:/depot/external -Dnlexternaldir=c:/depot/external -Dbuild_number=10001 -f scripts/build_publish.xml	or		set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH%		set ANT_OPTS=-XX:MaxPermSize=512m -Dnlbuildroot=%NLBUILDROOT% -Dexternal.dir=%NLEXTERNALDIR% -Dnlexternaldir=%NLEXTERNALDIR% -Dbuild_number=10001 		ant -f scripts/build_publish.xml -v	--><project name="build_compile" default="all" basedir=".">	<!-- Property files -->	<property file="${basedir}/build.properties" />  	<property environment="env" />	<!-- Global properties -->	<property name="xlib_dir" location="${nlbuildroot}/xlib" />	<property name="jarfile_name" value="DBConnectionTest" />	<property name="lib_dir" location="${nlbuildroot}/lib" />	<property name="xlib_jar_dir" location="${xlib_dir}/jar" />	<property name="build_dir" location="${nlbuildroot}/build" />	<property name="classes_dir" value="${build_dir}/classes" />	<property name="package_dir" value="${build_dir}/${package_name}" />	<property name="package_conf_dir" value="${build_dir}/${package_name}/conf" />	<property name="package_libs_dir" value="${build_dir}/${package_name}/lib" />	<property name="src_dir" value="${nlbuildroot}/src/main/java" />	<property name="resources_dir" value="${nlbuildroot}/src/main/resources"/>	<property name="dist_zip_file_name" value="${package_name}-${version_str}-${version_build_short}-${build_date_long}.zip" />	<!-- Dump properties -->	<echoproperties />	<echo message="INFO: Dump properties completed" />	<!-- Sanity checks -->	<fail message="nlbuildroot is not set" unless="nlbuildroot" />	<fail message="nlbuildroot is empty">		<condition>			<equals arg1="${nlbuildroot}" arg2="" trim="true" />		</condition>	</fail>	<available file="${nlbuildroot}" type="dir" property="local.nlbuildroot_exists" />	<fail message="nlbuildroot directory does not exist - ${nlbuildroot}" unless="local.nlbuildroot_exists" />	<echo message="INFO: Sanity check completed (no error)" />	<path id="compile.classpath">		<fileset dir="${xlib_jar_dir}">			<include name="*.jar"/>		</fileset>		<fileset dir="${lib_dir}">				<include name="*.jar"/>		</fileset>	</path>	<!-- Global tasks -->	<tstamp>		<format property="local.now" pattern="EEE, d MMM yyyy HH:mm:ss Z" />	</tstamp>	<echo message="version_str = ${version_str}" />	<echo message="time = ${local.now}" />	<!-- Targets -->	<target name="all" description="Default for all" depends="clean, compile, package" />	<target name="clean" description="Delete all build artifacts" depends="">		<delete includeemptydirs="true" dir="${build_dir}"/>	</target>    <target name="compile" description="Compile the project" depends="clean" >		<mkdir dir="${classes_dir}" />		<javac srcdir="${nlbuildroot}/src" destdir="${classes_dir}" includeantruntime="false">			<classpath refid="compile.classpath"/>			<include name="**/*.java" />        </javac>        <jar destfile="${build_dir}/${jarfile_name}.jar" basedir="${classes_dir}">			<manifest>				<attribute name="Main-Class" value="com.nextlabs.TestConnection"/>			</manifest>		</jar>	</target>	<target name="package" description="prepare the deployment structure">        <mkdir dir="${package_conf_dir}" />        <copy todir="${package_conf_dir}" overwrite="true">            <fileset file="${resources_dir}/*.*" />        </copy>        <mkdir dir="${package_libs_dir}" />        <copy todir="${package_libs_dir}" overwrite="true">            <fileset dir="${xlib_jar_dir}" />            <fileset dir="${lib_dir}" />        </copy>		<copy todir="${package_dir}" overwrite="true">			<fileset file="${build_dir}/${jarfile_name}.jar" />			<fileset file="${nlbuildroot}/README.txt" />		</copy>		<zip destfile="${build_dir}/${dist_zip_file_name}" encoding="UTF-8"> 			<fileset dir="${package_dir}">				<include name="**/*.*" />			</fileset>		</zip> 		</target></project>