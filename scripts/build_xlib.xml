<!-- build_xlib.xmlDescription:	This ANT script constructs <project root>/xlib.	To use this script, you must update properties is <project root>/scripts/build.properties or overide 	them from commandline (using -D option). For example:				set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH%		ant -XX:MaxPermSize=512m -Dnlbuildroot=C:/depot/PolicyStudio/dev/BuildScript_1205 -Dexternal.dir=c:/depot/external -Dnlexternaldir=c:/depot/external -f scripts/build_xlib.xml			or				set PATH=C:\depot\external\apache-ant\apache-ant-1.8.4\bin;%PATH%		set ANT_OPTS=-XX:MaxPermSize=512m -Dnlbuildroot=%NLBUILDROOT% -Dexternal.dir=%NLEXTERNALDIR% -Dnlexternaldir=%NLEXTERNALDIR% 		ant -f scripts/build_xlib.xml -v	--><project name="build_xlib" default="all" basedir=".">    <!-- Debug    <echoproperties />    <fail message="INFO: Debug" />    -->    <!-- Property files -->    <property file="${basedir}/build.properties"/>    <!-- Global properties -->				<property name="lib_dir" location="${nlbuildroot}/lib"/>    <property name="xlib_dir" location="${nlbuildroot}/xlib"/>    <property name="xlib_jar_dir" location="${xlib_dir}/jar"/>    <!-- TBD: psexternaldir is a temporary variable. It will be removed with all files        under lib are extracted automatically from build artifacts. -->    <property name="psexternaldir" location="${nlbuildroot}/lib"/>    <!-- Dump properties -->    <echoproperties/>    <echo message="INFO: Dump properties completed"/>    <!-- Sanity checks -->    <fail message="nlbuildroot is not set" unless="nlbuildroot"/>    <fail message="nlbuildroot is empty">        <condition>            <equals arg1="${nlbuildroot}" arg2="" trim="true"/>        </condition>    </fail>    <available file="${nlbuildroot}" type="dir" property="local.nlbuildroot_exists"/>    <fail message="nlbuildroot directory does not exist - ${nlbuildroot}" unless="local.nlbuildroot_exists"/>    <fail message="nlexternaldir is not set" unless="nlexternaldir"/>    <fail message="nlexternaldir is empty">        <condition>            <equals arg1="${nlexternaldir}" arg2="" trim="true"/>        </condition>    </fail>    <available file="${nlexternaldir}" type="dir" property="local.nlexternaldir_exists"/>    <fail message="nlexternaldir directory does not exist - ${nlexternaldir}" unless="local.nlexternaldir_exists"/>    <echo message="INFO: Sanity check completed (no error)"/>    <!-- Targets -->    <target name="all" depends="clean, prepare_internal_jar, prepare_external_jar"/>    <target name="prepare_internal_jar">        <unzip src="${xlib_destiny_build_artifacts_zip_file}" dest="${lib_dir}" overwrite="true">            <patternset>                <include name="agent/lib/crypt.jar"/>            </patternset>            <mapper type="flatten"/>        </unzip>    </target>    <target name="prepare_external_jar">        <mkdir dir="${xlib_jar_dir}"/>        <copy file="${nlexternaldir}/log4j/apache-log4j-2.8.2/log4j-core-2.8.2.jar" todir="${xlib_jar_dir}"              preservelastmodified="true" overwrite="false" verbose="true"/>        <copy file="${nlexternaldir}/log4j/apache-log4j-2.8.2/log4j-api-2.8.2.jar" todir="${xlib_jar_dir}"              preservelastmodified="true" overwrite="false" verbose="true"/>        <copy file="${nlexternaldir}/sqlserver/sqljdbc_4.1/enu/sqljdbc41.jar" todir="${xlib_jar_dir}"              preservelastmodified="true" overwrite="false" verbose="true"/>    </target>    <target name="clean">        <delete dir="${xlib_dir}"/>    </target></project>